version: '3.8'

services:
  db:
    image: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  redis:
    image: redis
    networks:
      - mynetwork

  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - redis
      - db
    networks:
      - mynetwork
    command: >
      sh -c "alembic upgrade head && python data.py && uvicorn app:app --host 0.0.0.0 --port 8000"
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db/${DB_NAME}
      - REDIS_URL=redis://redis:6379/0

  celery:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: celery -A celery_worker.celery worker -B --loglevel=info
    depends_on:
      - db
      - redis
    networks:
      - mynetwork
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db/${DB_NAME}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  celery-beat:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: celery -A celery_worker.celery beat --loglevel=info
    depends_on:
      - db
      - redis
      - celery
    networks:
      - mynetwork
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db/${DB_NAME}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0


networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data:
